{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const CATEGORIES = ['Codecademy', 'EdX', 'freeCodeCamp', 'Udacity', 'Coursera', 'Linkedin Learning', 'MITx', 'Udemy', 'HarvardX'];\nconst initialState = CATEGORIES.map(category => ({\n  category: category,\n  amount: 0\n}));\nconst budgetsSlice = createSlice({\n  name: 'budgets',\n  initialState: initialState,\n  reducers: {\n    // Set editBudget equal to a case reducer that receives two arguments—state and action\n    editBudget: (state, action) => {\n      // action.payload will have a category and amount property.\n      const category = action.payload.category;\n      const amount = action.payload.amount;\n      // Update the state by \"finding\" the budget object\n      // Note: the variables category and action, implemented below, are each assigned action.payload (referenced in the above const). \n      // The budget object whose .category value matches action.payload.category and changing with the .amount value to action.payload.amount.\n      state.find(budget => budget.category === category).amount = amount;\n    }\n  }\n});\nexport const selectBudgets = state => state.budgets;\nexport const {\n  editBudget\n} = budgetsSlice.actions;\nexport default budgetsSlice.reducer;","map":{"version":3,"names":["createSlice","CATEGORIES","initialState","map","category","amount","budgetsSlice","name","reducers","editBudget","state","action","payload","find","budget","selectBudgets","budgets","actions","reducer"],"sources":["C:/Users/Andres R. Bucheli/Desktop/SOFTWARE ENGINEER/PORTFOLIO/REFACTORED-PROJECTS/MY-CODING-EDUCATION-BUDGET/src/features/budgets/budgetsSlice.js"],"sourcesContent":["  \r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const CATEGORIES = ['Codecademy', 'EdX', 'freeCodeCamp', 'Udacity', 'Coursera', 'Linkedin Learning', 'MITx', 'Udemy', 'HarvardX'];\r\nconst initialState = CATEGORIES.map(category => ({ category: category, amount: 0 }))\r\n\r\nconst budgetsSlice = createSlice({\r\n  name: 'budgets',\r\n  initialState: initialState,\r\n  reducers: {\r\n    // Set editBudget equal to a case reducer that receives two arguments—state and action\r\n    editBudget: (state, action) => {\r\n      // action.payload will have a category and amount property.\r\n      const category = action.payload.category;\r\n      const amount = action.payload.amount;\r\n      // Update the state by \"finding\" the budget object\r\n      // Note: the variables category and action, implemented below, are each assigned action.payload (referenced in the above const). \r\n      // The budget object whose .category value matches action.payload.category and changing with the .amount value to action.payload.amount.\r\n      state.find(budget => budget.category === category).amount = amount \r\n    }\r\n  },\r\n});\r\n\r\nexport const selectBudgets = (state) => state.budgets;\r\nexport const { editBudget } = budgetsSlice.actions\r\nexport default budgetsSlice.reducer;\r\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAG,CAAC,YAAY,EAAE,KAAK,EAAE,cAAc,EAAE,SAAS,EAAE,UAAU,EAAE,mBAAmB,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;AACxI,MAAMC,YAAY,GAAGD,UAAU,CAACE,GAAG,CAACC,QAAQ,KAAK;EAAEA,QAAQ,EAAEA,QAAQ;EAAEC,MAAM,EAAE;AAAE,CAAC,CAAC,CAAC;AAEpF,MAAMC,YAAY,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,SAAS;EACfL,YAAY,EAAEA,YAAY;EAC1BM,QAAQ,EAAE;IACR;IACAC,UAAU,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B;MACA,MAAMP,QAAQ,GAAGO,MAAM,CAACC,OAAO,CAACR,QAAQ;MACxC,MAAMC,MAAM,GAAGM,MAAM,CAACC,OAAO,CAACP,MAAM;MACpC;MACA;MACA;MACAK,KAAK,CAACG,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACV,QAAQ,KAAKA,QAAQ,CAAC,CAACC,MAAM,GAAGA,MAAM;IACpE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMU,aAAa,GAAIL,KAAK,IAAKA,KAAK,CAACM,OAAO;AACrD,OAAO,MAAM;EAAEP;AAAW,CAAC,GAAGH,YAAY,CAACW,OAAO;AAClD,eAAeX,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}